[{"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/index.tsx":"1","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/App.tsx":"2","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/styles/global.ts":"3","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignIn/styles.ts":"4","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignIn/index.tsx":"5","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/components/Input/styles.ts":"6","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/components/Button/index.tsx":"7","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignUp/styles.ts":"8","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignUp/index.tsx":"9","/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/components/Input/index.tsx":"10"},{"size":198,"mtime":1610004321107,"results":"11","hashOfConfig":"12"},{"size":269,"mtime":1610105704181,"results":"13","hashOfConfig":"12"},{"size":451,"mtime":1610005603789,"results":"14","hashOfConfig":"12"},{"size":1682,"mtime":1610010982391,"results":"15","hashOfConfig":"12"},{"size":1282,"mtime":1610032497270,"results":"16","hashOfConfig":"12"},{"size":512,"mtime":1610032149211,"results":"17","hashOfConfig":"12"},{"size":309,"mtime":1610010801921,"results":"18","hashOfConfig":"12"},{"size":1322,"mtime":1610106307086,"results":"19","hashOfConfig":"12"},{"size":1315,"mtime":1610105781449,"results":"20","hashOfConfig":"12"},{"size":1492,"mtime":1610189345513,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18w0bzl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/index.tsx",[],["45","46"],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/App.tsx",["47"],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/styles/global.ts",[],["48","49"],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignIn/styles.ts",[],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignIn/index.tsx",[],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/components/Input/styles.ts",[],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/components/Button/index.tsx",[],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignUp/styles.ts",[],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/pages/SignUp/index.tsx",[],"/home/ja/Projects/GoStack13/nivel03/06-gobarber/src/components/Input/index.tsx",["50"],"import React, {\n    InputHTMLAttributes,\n    useEffect,\n    useState,\n    useCallback,\n    useRef,\n} from \"react\";\nimport { IconBaseProps } from \"react-icons\";\nimport { useField } from \"@unform/core\";\nimport { Container } from \"./styles\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    name: string;\n    icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isFilled, setIsFilled] = useState(false);\n    const { fieldName, defaultValue, error, registerField } = useField(name);\n\n    const handleInputFocus = useCallback(() => {\n        setIsFocused(true);\n    }, []);\n\n    const handleInputBlur = useCallback(() => {\n        setIsFocused(false);\n\n        setIsFilled(!!inputRef.current?.value);\n    }, []);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: \"value\",\n        });\n    }, [fieldName, registerField]);\n    return (\n        <Container isFilled={isFilled} isFocused={isFocused}>\n            {Icon && <Icon size={20} />}\n            <input\n                onFocus={handleInputFocus}\n                onBlur={handleInputBlur}\n                defaultValue={defaultValue}\n                ref={inputRef}\n                {...rest}\n            />\n        </Container>\n    );\n};\n\nexport default Input;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","replacedBy":"60"},{"ruleId":"55","severity":1,"message":"61","line":21,"column":38,"nodeType":"57","messageId":"58","endLine":21,"endColumn":43},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'SignIn' is defined but never used.","Identifier","unusedVar",["62"],["63"],"'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]